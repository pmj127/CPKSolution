@model CPK_Project.Models.MessageSendModel

@{
    ViewBag.Title = "Send Message";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Send Message</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="well">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-xs-3">
                <h4><strong>@Html.DisplayNameFor(model => model.Title)</strong></h4>
            </div>
            <div class="col-xs-9">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-xs-3">
                <h4><strong>@Html.DisplayNameFor(model => model.UserID)</strong></h4>
            </div>
            <div class="col-xs-7">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" ,@readonly="readonly", @rows = "4" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-2" style="text-align:center"> 
                <button type="button" id="btnUsersModal" class="btn btn-primary" data-toggle="modal"
                        data-target="#UsersModal" data-backdrop="static" data-keyboard="false"
                        data-fnselect="SetUserGroup" data-fnclose="">
                    <span class="glyphicon glyphicon-plus" />
                </button>
                <button type="button" id="btnClear" class="btn btn-warning"><span class="glyphicon glyphicon-remove" /></button>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-3">
                <h4><strong>@Html.DisplayNameFor(model => model.Content)</strong></h4>
            </div>
            <div class="col-xs-9">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div style="text-align:center">
        <input type="submit" value="Send" class="btn btn-danger" />
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success" })
    </div>
}
<script type="text/javascript">
    $(function () {
        $("#btnClear").click(function () {
            $("#@Html.IdFor(model => model.UserID)").val("");
        });
    });
    ///moongrid modal
    function modalMessage(gridID,title, body, footer) {
        if (footer)
            $('#' + gridID + 'Modal .modal-footer').show();
        else
            $('#' + gridID + 'Modal .modal-footer').hide();

        $('#' + gridID + 'Modal .modal-title').text(title);
        var modalbody = $('#' + gridID + 'Modal .modal-body');
        modalbody.children().remove();
        if (body == "")
            modalbody.append('<div class="progress"><div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"><span class="sr-only">Please wait for a while...</span></div></div>');
        else
            modalbody.append('<p>' + body + '</p>');
    }
    function modalShow(gridID, status) {
        if (status)
            $('#' + gridID + 'Modal').modal({ show: true, backdrop: 'static', keyboard: false });
        else
            $('#' + gridID + 'Modal').modal('hide');
    }

    //select click
    var SetUserGroup = function (event) {
        var gridID = event.data.id;
        var recipients = "";
        $("#" + gridID + " input[name=" + gridID + "checkbox]:checked").each(function () {
            recipients +=  $(this).data("value") + ";";
        });

        var txt = $("#@Html.IdFor(model => model.UserID)");
        txt.val(checkString(txt.val(), recipients));
        modalMessage(gridID, "Success", "Successfully, Users were selected", true);
        modalShow(gridID, true);
    }
    function checkString(org, chk)
    {
        var sSplit = chk.split(";");
        for(var i=0; i < sSplit.length; i++)
        {
            if (org.indexOf(sSplit[i]) < 0)
                org += sSplit[i] + ";";
        }
        return org;
    }
</script>
@Html.Partial("_UserListPartial")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/moonGrid")
    @Scripts.Render("~/bundles/moonGrid")
}